{"version":3,"file":"index.es.js","sources":["../src/constants/values.ts","../src/constants/events.ts","../../../node_modules/es-toolkit/dist/function/noop.mjs","../../../node_modules/es-toolkit/dist/predicate/isPrimitive.mjs","../../../node_modules/es-toolkit/dist/predicate/isTypedArray.mjs","../../../node_modules/es-toolkit/dist/object/clone.mjs","../../../node_modules/es-toolkit/dist/compat/predicate/isObjectLike.mjs","../../../node_modules/es-toolkit/dist/compat/_internal/getSymbols.mjs","../../../node_modules/es-toolkit/dist/compat/_internal/getTag.mjs","../../../node_modules/es-toolkit/dist/compat/_internal/tags.mjs","../../../node_modules/es-toolkit/dist/object/cloneDeepWith.mjs","../../../node_modules/es-toolkit/dist/compat/object/cloneDeepWith.mjs","../../../node_modules/es-toolkit/dist/compat/object/cloneDeep.mjs","../../../node_modules/es-toolkit/dist/compat/predicate/isArguments.mjs","../../../node_modules/es-toolkit/dist/compat/predicate/isTypedArray.mjs","../../../node_modules/es-toolkit/dist/compat/predicate/isPlainObject.mjs","../../../node_modules/es-toolkit/dist/compat/object/mergeWith.mjs","../../../node_modules/es-toolkit/dist/compat/object/merge.mjs","../src/utils/misc.ts","../src/utils/globals.ts","../src/providers/polkadot.ts","../src/providers/eip155.ts","../src/providers/solana.ts","../src/providers/cosmos.ts","../src/providers/algorand.ts","../src/providers/cardano.ts","../src/providers/elrond.ts","../src/providers/multiversx.ts","../src/providers/near.ts","../src/providers/tezos.ts","../src/providers/generic.ts","../src/UniversalProvider.ts","../src/index.ts"],"sourcesContent":["export const LOGGER = \"error\";\n\nexport const RELAY_URL = \"wss://relay.walletconnect.org\";\n\nexport const PROTOCOL = \"wc\";\nexport const WC_VERSION = 2;\nexport const CONTEXT = \"universal_provider\";\n\nexport const STORAGE = `${PROTOCOL}@${WC_VERSION}:${CONTEXT}:`;\n\nexport const RPC_URL = \"https://rpc.walletconnect.org/v1/\";\n\nexport const GENERIC_SUBPROVIDER_NAME = \"generic\";\n\nexport const BUNDLER_URL = `${RPC_URL}bundler`;\n","export const PROVIDER_EVENTS = {\n  DEFAULT_CHAIN_CHANGED: \"default_chain_changed\",\n};\n","function noop() { }\n\nexport { noop };\n","function isPrimitive(value) {\n    return value == null || (typeof value !== 'object' && typeof value !== 'function');\n}\n\nexport { isPrimitive };\n","function isTypedArray(x) {\n    return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nexport { isTypedArray };\n","import { isPrimitive } from '../predicate/isPrimitive.mjs';\nimport { isTypedArray } from '../predicate/isTypedArray.mjs';\n\nfunction clone(obj) {\n    if (isPrimitive(obj)) {\n        return obj;\n    }\n    if (Array.isArray(obj) ||\n        isTypedArray(obj) ||\n        obj instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && obj instanceof SharedArrayBuffer)) {\n        return obj.slice(0);\n    }\n    const prototype = Object.getPrototypeOf(obj);\n    const Constructor = prototype.constructor;\n    if (obj instanceof Date || obj instanceof Map || obj instanceof Set) {\n        return new Constructor(obj);\n    }\n    if (obj instanceof RegExp) {\n        const newRegExp = new Constructor(obj);\n        newRegExp.lastIndex = obj.lastIndex;\n        return newRegExp;\n    }\n    if (obj instanceof DataView) {\n        return new Constructor(obj.buffer.slice(0));\n    }\n    if (obj instanceof Error) {\n        const newError = new Constructor(obj.message);\n        newError.stack = obj.stack;\n        newError.name = obj.name;\n        newError.cause = obj.cause;\n        return newError;\n    }\n    if (typeof File !== 'undefined' && obj instanceof File) {\n        const newFile = new Constructor([obj], obj.name, { type: obj.type, lastModified: obj.lastModified });\n        return newFile;\n    }\n    if (typeof obj === 'object') {\n        const newObject = Object.create(prototype);\n        return Object.assign(newObject, obj);\n    }\n    return obj;\n}\n\nexport { clone };\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\n\nexport { isObjectLike };\n","function getSymbols(object) {\n    return Object.getOwnPropertySymbols(object).filter(symbol => Object.prototype.propertyIsEnumerable.call(object, symbol));\n}\n\nexport { getSymbols };\n","function getTag(value) {\n    if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n    return Object.prototype.toString.call(value);\n}\n\nexport { getTag };\n","const regexpTag = '[object RegExp]';\nconst stringTag = '[object String]';\nconst numberTag = '[object Number]';\nconst booleanTag = '[object Boolean]';\nconst argumentsTag = '[object Arguments]';\nconst symbolTag = '[object Symbol]';\nconst dateTag = '[object Date]';\nconst mapTag = '[object Map]';\nconst setTag = '[object Set]';\nconst arrayTag = '[object Array]';\nconst functionTag = '[object Function]';\nconst arrayBufferTag = '[object ArrayBuffer]';\nconst objectTag = '[object Object]';\nconst errorTag = '[object Error]';\nconst dataViewTag = '[object DataView]';\nconst uint8ArrayTag = '[object Uint8Array]';\nconst uint8ClampedArrayTag = '[object Uint8ClampedArray]';\nconst uint16ArrayTag = '[object Uint16Array]';\nconst uint32ArrayTag = '[object Uint32Array]';\nconst bigUint64ArrayTag = '[object BigUint64Array]';\nconst int8ArrayTag = '[object Int8Array]';\nconst int16ArrayTag = '[object Int16Array]';\nconst int32ArrayTag = '[object Int32Array]';\nconst bigInt64ArrayTag = '[object BigInt64Array]';\nconst float32ArrayTag = '[object Float32Array]';\nconst float64ArrayTag = '[object Float64Array]';\n\nexport { argumentsTag, arrayBufferTag, arrayTag, bigInt64ArrayTag, bigUint64ArrayTag, booleanTag, dataViewTag, dateTag, errorTag, float32ArrayTag, float64ArrayTag, functionTag, int16ArrayTag, int32ArrayTag, int8ArrayTag, mapTag, numberTag, objectTag, regexpTag, setTag, stringTag, symbolTag, uint16ArrayTag, uint32ArrayTag, uint8ArrayTag, uint8ClampedArrayTag };\n","import { getSymbols } from '../compat/_internal/getSymbols.mjs';\nimport { getTag } from '../compat/_internal/getTag.mjs';\nimport { uint32ArrayTag, uint16ArrayTag, uint8ClampedArrayTag, uint8ArrayTag, symbolTag, stringTag, setTag, regexpTag, objectTag, numberTag, mapTag, int32ArrayTag, int16ArrayTag, int8ArrayTag, float64ArrayTag, float32ArrayTag, dateTag, booleanTag, dataViewTag, arrayBufferTag, arrayTag, argumentsTag } from '../compat/_internal/tags.mjs';\nimport { isPrimitive } from '../predicate/isPrimitive.mjs';\nimport { isTypedArray } from '../predicate/isTypedArray.mjs';\n\nfunction cloneDeepWith(obj, cloneValue) {\n    return cloneDeepWithImpl(obj, undefined, obj, new Map(), cloneValue);\n}\nfunction cloneDeepWithImpl(valueToClone, keyToClone, objectToClone, stack = new Map(), cloneValue = undefined) {\n    const cloned = cloneValue?.(valueToClone, keyToClone, objectToClone, stack);\n    if (cloned != null) {\n        return cloned;\n    }\n    if (isPrimitive(valueToClone)) {\n        return valueToClone;\n    }\n    if (stack.has(valueToClone)) {\n        return stack.get(valueToClone);\n    }\n    if (Array.isArray(valueToClone)) {\n        const result = new Array(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        if (Object.hasOwn(valueToClone, 'index')) {\n            result.index = valueToClone.index;\n        }\n        if (Object.hasOwn(valueToClone, 'input')) {\n            result.input = valueToClone.input;\n        }\n        return result;\n    }\n    if (valueToClone instanceof Date) {\n        return new Date(valueToClone.getTime());\n    }\n    if (valueToClone instanceof RegExp) {\n        const result = new RegExp(valueToClone.source, valueToClone.flags);\n        result.lastIndex = valueToClone.lastIndex;\n        return result;\n    }\n    if (valueToClone instanceof Map) {\n        const result = new Map();\n        stack.set(valueToClone, result);\n        for (const [key, value] of valueToClone) {\n            result.set(key, cloneDeepWithImpl(value, key, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (valueToClone instanceof Set) {\n        const result = new Set();\n        stack.set(valueToClone, result);\n        for (const value of valueToClone) {\n            result.add(cloneDeepWithImpl(value, undefined, objectToClone, stack, cloneValue));\n        }\n        return result;\n    }\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(valueToClone)) {\n        return valueToClone.subarray();\n    }\n    if (isTypedArray(valueToClone)) {\n        const result = new (Object.getPrototypeOf(valueToClone).constructor)(valueToClone.length);\n        stack.set(valueToClone, result);\n        for (let i = 0; i < valueToClone.length; i++) {\n            result[i] = cloneDeepWithImpl(valueToClone[i], i, objectToClone, stack, cloneValue);\n        }\n        return result;\n    }\n    if (valueToClone instanceof ArrayBuffer ||\n        (typeof SharedArrayBuffer !== 'undefined' && valueToClone instanceof SharedArrayBuffer)) {\n        return valueToClone.slice(0);\n    }\n    if (valueToClone instanceof DataView) {\n        const result = new DataView(valueToClone.buffer.slice(0), valueToClone.byteOffset, valueToClone.byteLength);\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof File !== 'undefined' && valueToClone instanceof File) {\n        const result = new File([valueToClone], valueToClone.name, {\n            type: valueToClone.type,\n        });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Blob) {\n        const result = new Blob([valueToClone], { type: valueToClone.type });\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (valueToClone instanceof Error) {\n        const result = new valueToClone.constructor();\n        stack.set(valueToClone, result);\n        result.message = valueToClone.message;\n        result.name = valueToClone.name;\n        result.stack = valueToClone.stack;\n        result.cause = valueToClone.cause;\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    if (typeof valueToClone === 'object' && isCloneableObject(valueToClone)) {\n        const result = Object.create(Object.getPrototypeOf(valueToClone));\n        stack.set(valueToClone, result);\n        copyProperties(result, valueToClone, objectToClone, stack, cloneValue);\n        return result;\n    }\n    return valueToClone;\n}\nfunction copyProperties(target, source, objectToClone = target, stack, cloneValue) {\n    const keys = [...Object.keys(source), ...getSymbols(source)];\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const descriptor = Object.getOwnPropertyDescriptor(target, key);\n        if (descriptor == null || descriptor.writable) {\n            target[key] = cloneDeepWithImpl(source[key], key, objectToClone, stack, cloneValue);\n        }\n    }\n}\nfunction isCloneableObject(object) {\n    switch (getTag(object)) {\n        case argumentsTag:\n        case arrayTag:\n        case arrayBufferTag:\n        case dataViewTag:\n        case booleanTag:\n        case dateTag:\n        case float32ArrayTag:\n        case float64ArrayTag:\n        case int8ArrayTag:\n        case int16ArrayTag:\n        case int32ArrayTag:\n        case mapTag:\n        case numberTag:\n        case objectTag:\n        case regexpTag:\n        case setTag:\n        case stringTag:\n        case symbolTag:\n        case uint8ArrayTag:\n        case uint8ClampedArrayTag:\n        case uint16ArrayTag:\n        case uint32ArrayTag: {\n            return true;\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nexport { cloneDeepWith, cloneDeepWithImpl, copyProperties };\n","import { cloneDeepWith as cloneDeepWith$1, copyProperties } from '../../object/cloneDeepWith.mjs';\nimport { argumentsTag, booleanTag, stringTag, numberTag } from '../_internal/tags.mjs';\n\nfunction cloneDeepWith(obj, cloneValue) {\n    return cloneDeepWith$1(obj, (value, key, object, stack) => {\n        const cloned = cloneValue?.(value, key, object, stack);\n        if (cloned != null) {\n            return cloned;\n        }\n        if (typeof obj !== 'object') {\n            return undefined;\n        }\n        switch (Object.prototype.toString.call(obj)) {\n            case numberTag:\n            case stringTag:\n            case booleanTag: {\n                const result = new obj.constructor(obj?.valueOf());\n                copyProperties(result, obj);\n                return result;\n            }\n            case argumentsTag: {\n                const result = {};\n                copyProperties(result, obj);\n                result.length = obj.length;\n                result[Symbol.iterator] = obj[Symbol.iterator];\n                return result;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    });\n}\n\nexport { cloneDeepWith };\n","import { cloneDeepWith } from './cloneDeepWith.mjs';\n\nfunction cloneDeep(obj) {\n    return cloneDeepWith(obj);\n}\n\nexport { cloneDeep };\n","import { getTag } from '../_internal/getTag.mjs';\n\nfunction isArguments(value) {\n    return value !== null && typeof value === 'object' && getTag(value) === '[object Arguments]';\n}\n\nexport { isArguments };\n","import { isTypedArray as isTypedArray$1 } from '../../predicate/isTypedArray.mjs';\n\nfunction isTypedArray(x) {\n    return isTypedArray$1(x);\n}\n\nexport { isTypedArray };\n","function isPlainObject(object) {\n    if (typeof object !== 'object') {\n        return false;\n    }\n    if (object == null) {\n        return false;\n    }\n    if (Object.getPrototypeOf(object) === null) {\n        return true;\n    }\n    if (Object.prototype.toString.call(object) !== '[object Object]') {\n        const tag = object[Symbol.toStringTag];\n        if (tag == null) {\n            return false;\n        }\n        const isTagReadonly = !Object.getOwnPropertyDescriptor(object, Symbol.toStringTag)?.writable;\n        if (isTagReadonly) {\n            return false;\n        }\n        return object.toString() === `[object ${tag}]`;\n    }\n    let proto = object;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(object) === proto;\n}\n\nexport { isPlainObject };\n","import { cloneDeep } from './cloneDeep.mjs';\nimport { clone } from '../../object/clone.mjs';\nimport { isPrimitive } from '../../predicate/isPrimitive.mjs';\nimport { getSymbols } from '../_internal/getSymbols.mjs';\nimport { isArguments } from '../predicate/isArguments.mjs';\nimport { isObjectLike } from '../predicate/isObjectLike.mjs';\nimport { isPlainObject } from '../predicate/isPlainObject.mjs';\nimport { isTypedArray } from '../predicate/isTypedArray.mjs';\n\nfunction mergeWith(object, ...otherArgs) {\n    const sources = otherArgs.slice(0, -1);\n    const merge = otherArgs[otherArgs.length - 1];\n    let result = object;\n    for (let i = 0; i < sources.length; i++) {\n        const source = sources[i];\n        result = mergeWithDeep(result, source, merge, new Map());\n    }\n    return result;\n}\nfunction mergeWithDeep(target, source, merge, stack) {\n    if (isPrimitive(target)) {\n        target = Object(target);\n    }\n    if (source == null || typeof source !== 'object') {\n        return target;\n    }\n    if (stack.has(source)) {\n        return clone(stack.get(source));\n    }\n    stack.set(source, target);\n    if (Array.isArray(source)) {\n        source = source.slice();\n        for (let i = 0; i < source.length; i++) {\n            source[i] = source[i] ?? undefined;\n        }\n    }\n    const sourceKeys = [...Object.keys(source), ...getSymbols(source)];\n    for (let i = 0; i < sourceKeys.length; i++) {\n        const key = sourceKeys[i];\n        let sourceValue = source[key];\n        let targetValue = target[key];\n        if (isArguments(sourceValue)) {\n            sourceValue = { ...sourceValue };\n        }\n        if (isArguments(targetValue)) {\n            targetValue = { ...targetValue };\n        }\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(sourceValue)) {\n            sourceValue = cloneDeep(sourceValue);\n        }\n        if (Array.isArray(sourceValue)) {\n            if (typeof targetValue === 'object' && targetValue != null) {\n                const cloned = [];\n                const targetKeys = Reflect.ownKeys(targetValue);\n                for (let i = 0; i < targetKeys.length; i++) {\n                    const targetKey = targetKeys[i];\n                    cloned[targetKey] = targetValue[targetKey];\n                }\n                targetValue = cloned;\n            }\n            else {\n                targetValue = [];\n            }\n        }\n        const merged = merge(targetValue, sourceValue, key, target, source, stack);\n        if (merged != null) {\n            target[key] = merged;\n        }\n        else if (Array.isArray(sourceValue)) {\n            target[key] = mergeWithDeep(targetValue, sourceValue, merge, stack);\n        }\n        else if (isObjectLike(targetValue) && isObjectLike(sourceValue)) {\n            target[key] = mergeWithDeep(targetValue, sourceValue, merge, stack);\n        }\n        else if (targetValue == null && isPlainObject(sourceValue)) {\n            target[key] = mergeWithDeep({}, sourceValue, merge, stack);\n        }\n        else if (targetValue == null && isTypedArray(sourceValue)) {\n            target[key] = cloneDeep(sourceValue);\n        }\n        else if (targetValue === undefined || sourceValue !== undefined) {\n            target[key] = sourceValue;\n        }\n    }\n    return target;\n}\n\nexport { mergeWith };\n","import { mergeWith } from './mergeWith.mjs';\nimport { noop } from '../../function/noop.mjs';\n\nfunction merge(object, ...sources) {\n    return mergeWith(object, ...sources, noop);\n}\n\nexport { merge };\n","import { SessionTypes } from \"@walletconnect/types\";\nimport {\n  isCaipNamespace,\n  isValidObject,\n  mergeArrays,\n  parseChainId,\n  parseNamespaceKey,\n} from \"@walletconnect/utils\";\nimport { RPC_URL } from \"../constants\";\nimport { Namespace, NamespaceConfig } from \"../types\";\nimport { merge } from \"es-toolkit/compat\";\n\nexport function getRpcUrl(chainId: string, rpc: Namespace, projectId?: string): string | undefined {\n  const chain = parseChainId(chainId);\n  return (\n    rpc.rpcMap?.[chain.reference] ||\n    `${RPC_URL}?chainId=${chain.namespace}:${chain.reference}&projectId=${projectId}`\n  );\n}\n\nexport function getChainId(chain: string): string {\n  return chain.includes(\":\") ? chain.split(\":\")[1] : chain;\n}\n\nexport function validateChainApproval(chain: string, chains: string[]): void {\n  if (!chains.includes(chain)) {\n    throw new Error(\n      `Chain '${chain}' not approved. Please use one of the following: ${chains.toString()}`,\n    );\n  }\n}\n\nexport function getChainsFromApprovedSession(accounts: string[]): string[] {\n  return accounts.map((address) => `${address.split(\":\")[0]}:${address.split(\":\")[1]}`);\n}\n\nexport function getAccountsFromSession(namespace: string, session: SessionTypes.Struct): string[] {\n  // match namespaces e.g. eip155 with eip155:1\n  const matchedNamespaceKeys = Object.keys(session.namespaces).filter((key) =>\n    key.includes(namespace),\n  );\n  if (!matchedNamespaceKeys.length) return [];\n  const accounts: string[] = [];\n  matchedNamespaceKeys.forEach((key) => {\n    const accountsForNamespace = session.namespaces[key].accounts;\n    accounts.push(...accountsForNamespace);\n  });\n  return accounts;\n}\n\nexport function mergeRequiredOptionalNamespaces(\n  required: NamespaceConfig = {},\n  optional: NamespaceConfig = {},\n) {\n  const requiredNamespaces = normalizeNamespaces(required);\n  const optionalNamespaces = normalizeNamespaces(optional);\n  return merge(requiredNamespaces, optionalNamespaces);\n}\n\n/**\n * Converts\n * {\n *  \"eip155:1\": {...},\n *  \"eip155:2\": {...},\n * }\n * into\n * {\n *  \"eip155\": {\n *      chains: [\"eip155:1\", \"eip155:2\"],\n *      ...\n *    }\n * }\n *\n */\nexport function normalizeNamespaces(namespaces: NamespaceConfig): NamespaceConfig {\n  const normalizedNamespaces: NamespaceConfig = {};\n  if (!isValidObject(namespaces)) return normalizedNamespaces;\n\n  for (const [key, values] of Object.entries(namespaces)) {\n    const chains = isCaipNamespace(key) ? [key] : values.chains;\n    const methods = values.methods || [];\n    const events = values.events || [];\n    const rpcMap = values.rpcMap || {};\n    const normalizedKey = parseNamespaceKey(key);\n    normalizedNamespaces[normalizedKey] = {\n      ...normalizedNamespaces[normalizedKey],\n      ...values,\n      chains: mergeArrays(chains, normalizedNamespaces[normalizedKey]?.chains),\n      methods: mergeArrays(methods, normalizedNamespaces[normalizedKey]?.methods),\n      events: mergeArrays(events, normalizedNamespaces[normalizedKey]?.events),\n    };\n    // avoid adding empty `rpcMap: {}` if there are no values for it\n    if (isValidObject(rpcMap) || isValidObject(normalizedNamespaces[normalizedKey]?.rpcMap || {})) {\n      normalizedNamespaces[normalizedKey].rpcMap = {\n        ...rpcMap,\n        ...normalizedNamespaces[normalizedKey]?.rpcMap,\n      };\n    }\n  }\n  return normalizedNamespaces;\n}\n\nexport function parseCaip10Account(caip10Account: string): string {\n  return caip10Account.includes(\":\") ? caip10Account.split(\":\")[2] : caip10Account;\n}\n\n/**\n * Populates the chains array for each namespace with the chains extracted from the accounts if are otherwise missing\n */\nexport function populateNamespacesChains(\n  namespaces: SessionTypes.Namespaces,\n): Record<string, SessionTypes.Namespace> {\n  const parsedNamespaces: Record<string, SessionTypes.Namespace> = {};\n  for (const [key, values] of Object.entries(namespaces)) {\n    const methods = values.methods || [];\n    const events = values.events || [];\n    const accounts = values.accounts || [];\n    // If the key includes a CAIP separator `:` we know it's a namespace + chainId (e.g. `eip155:1`)\n    const chains = isCaipNamespace(key)\n      ? [key]\n      : values.chains\n        ? values.chains\n        : getChainsFromApprovedSession(values.accounts);\n    parsedNamespaces[key] = {\n      chains,\n      methods,\n      events,\n      accounts,\n    };\n  }\n  return parsedNamespaces;\n}\n\nexport function convertChainIdToNumber(chainId: string | number): number | string {\n  if (typeof chainId === \"number\") return chainId;\n  if (chainId.includes(\"0x\")) {\n    return parseInt(chainId, 16);\n  }\n\n  chainId = chainId.includes(\":\") ? chainId.split(\":\")[1] : chainId;\n  return isNaN(Number(chainId)) ? chainId : Number(chainId);\n}\n","const globals = {};\nexport const getGlobal = (key: string) => {\n  return globals[key];\n};\n\nexport const setGlobal = (key: string, value: unknown) => {\n  globals[key] = value;\n};\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\n\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\n\nclass PolkadotProvider implements IProvider {\n  public name = \"polkadot\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  // ---------------- PRIVATE ---------------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return (\n      accounts\n        // get the accounts from the active chain\n        .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n        // remove namespace & chainId from the string\n        .map((account) => account.split(\":\")[2]) || []\n    );\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChainId = getChainId(chain);\n      http[parsedChainId] = this.createHttpProvider(parsedChainId, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default PolkadotProvider;\n","import Client from \"@walletconnect/sign-client\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport { HttpConnection } from \"@walletconnect/jsonrpc-http-connection\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\n\nimport {\n  IProvider,\n  RpcProvidersMap,\n  SubProviderOpts,\n  RequestParams,\n  SessionNamespace,\n} from \"../types\";\n\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\nimport EventEmitter from \"events\";\nimport { BUNDLER_URL, PROVIDER_EVENTS } from \"../constants\";\nimport { formatJsonRpcRequest } from \"@walletconnect/jsonrpc-utils\";\n\nclass Eip155Provider implements IProvider {\n  public name = \"eip155\";\n  public client: Client;\n  // the active chainId on the dapp\n  public chainId: number;\n  public namespace: SessionNamespace;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.httpProviders = this.createHttpProviders();\n    this.chainId = parseInt(this.getDefaultChain());\n  }\n\n  public async request<T = unknown>(args: RequestParams): Promise<T> {\n    switch (args.request.method) {\n      case \"eth_requestAccounts\":\n        return this.getAccounts() as unknown as T;\n      case \"eth_accounts\":\n        return this.getAccounts() as unknown as T;\n      case \"wallet_switchEthereumChain\": {\n        return (await this.handleSwitchChain(args)) as unknown as T;\n      }\n      case \"eth_chainId\":\n        return parseInt(this.getDefaultChain()) as unknown as T;\n      case \"wallet_getCapabilities\":\n        return (await this.getCapabilities(args)) as unknown as T;\n      case \"wallet_getCallsStatus\":\n        return (await this.getCallStatus(args)) as unknown as T;\n      default:\n        break;\n    }\n    if (this.namespace.methods.includes(args.request.method)) {\n      return await this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(parseInt(chainId), rpcUrl);\n    }\n    this.chainId = parseInt(chainId);\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId.toString();\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private createHttpProvider(\n    chainId: number,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc =\n      rpcUrl || getRpcUrl(`${this.name}:${chainId}`, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n\n  private setHttpProvider(chainId: number, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChain = parseInt(getChainId(chain));\n      http[parsedChain] = this.createHttpProvider(parsedChain, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = this.chainId;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private async handleSwitchChain(args: RequestParams): Promise<any> {\n    let hexChainId = args.request.params ? args.request.params[0]?.chainId : \"0x0\";\n    hexChainId = hexChainId.startsWith(\"0x\") ? hexChainId : `0x${hexChainId}`;\n    const parsedChainId = parseInt(hexChainId, 16);\n    // if chainId is already approved, switch locally\n    if (this.isChainApproved(parsedChainId)) {\n      this.setDefaultChain(`${parsedChainId}`);\n    } else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) {\n      // try to switch chain within the wallet\n      await this.client.request({\n        topic: args.topic,\n        request: {\n          method: args.request.method,\n          params: [\n            {\n              chainId: hexChainId,\n            },\n          ],\n        },\n        chainId: this.namespace.chains?.[0], // Sending a previously unapproved chainId will cause namespace validation failure so we must set request chainId to the first chainId in the namespace to avoid it\n      } as EngineTypes.RequestParams);\n      this.setDefaultChain(`${parsedChainId}`);\n    } else {\n      throw new Error(\n        `Failed to switch to chain 'eip155:${parsedChainId}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`,\n      );\n    }\n    return null;\n  }\n\n  private isChainApproved(chainId: number): boolean {\n    return this.namespace.chains.includes(`${this.name}:${chainId}`);\n  }\n\n  private async getCapabilities(args: RequestParams) {\n    // if capabilities are stored in the session, return them, else send the request to the wallet\n    const address = args.request?.params?.[0];\n    const chainIds: string[] = args.request?.params?.[1] || [];\n\n    // cache key is address + chainIds to allow requests to be made to different chains\n    const capabilitiesKey = `${address}${chainIds.join(\",\")}`;\n    if (!address) throw new Error(\"Missing address parameter in `wallet_getCapabilities` request\");\n    const session = this.client.session.get(args.topic);\n    const sessionCapabilities = session?.sessionProperties?.capabilities || {};\n\n    if (sessionCapabilities?.[capabilitiesKey]) {\n      return sessionCapabilities?.[capabilitiesKey];\n    }\n\n    // intentionally omit catching errors/rejection during `request` to allow the error to bubble up\n    const capabilities = await this.client.request(args as EngineTypes.RequestParams);\n    try {\n      // update the session with the capabilities so they can be retrieved later\n      await this.client.session.update(args.topic, {\n        sessionProperties: {\n          ...(session.sessionProperties || {}),\n          capabilities: {\n            ...(sessionCapabilities || {}),\n            [capabilitiesKey]: capabilities,\n          } as any, // by spec sessionProperties should be <string, string> but here are used as objects?\n        },\n      });\n    } catch (error) {\n      console.warn(\"Failed to update session with capabilities\", error);\n    }\n    return capabilities;\n  }\n\n  private async getCallStatus(args: RequestParams) {\n    const session = this.client.session.get(args.topic);\n    const bundlerName = session.sessionProperties?.bundler_name;\n    if (bundlerName) {\n      const bundlerUrl = this.getBundlerUrl(args.chainId, bundlerName);\n      try {\n        return await this.getUserOperationReceipt(bundlerUrl, args);\n      } catch (error) {\n        console.warn(\"Failed to fetch call status from bundler\", error, bundlerUrl);\n      }\n    }\n    const customUrl = session.sessionProperties?.bundler_url;\n    if (customUrl) {\n      try {\n        return await this.getUserOperationReceipt(customUrl, args);\n      } catch (error) {\n        console.warn(\"Failed to fetch call status from custom bundler\", error, customUrl);\n      }\n    }\n\n    if (this.namespace.methods.includes(args.request.method)) {\n      return await this.client.request(args as EngineTypes.RequestParams);\n    }\n\n    throw new Error(\"Fetching call status not approved by the wallet.\");\n  }\n\n  private async getUserOperationReceipt(bundlerUrl: string, args: RequestParams) {\n    const url = new URL(bundlerUrl);\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(\n        formatJsonRpcRequest(\"eth_getUserOperationReceipt\", [args.request.params?.[0]]),\n      ),\n    });\n    if (!response.ok) {\n      throw new Error(`Failed to fetch user operation receipt - ${response.status}`);\n    }\n    return await response.json();\n  }\n\n  private getBundlerUrl(cap2ChainId: string, bundlerName: string) {\n    return `${BUNDLER_URL}?projectId=${this.client.core.projectId}&chainId=${cap2ChainId}&bundler=${bundlerName}`;\n  }\n}\n\nexport default Eip155Provider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\n\nclass SolanaProvider implements IProvider {\n  public name = \"solana\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // --------- PRIVATE --------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChainId = getChainId(chain);\n      http[parsedChainId] = this.createHttpProvider(parsedChainId, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default SolanaProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\n\nclass CosmosProvider implements IProvider {\n  public name = \"cosmos\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n  }\n\n  // ---------------- PRIVATE ---------------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChainId = getChainId(chain);\n      http[parsedChainId] = this.createHttpProvider(parsedChainId, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default CosmosProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getGlobal, getRpcUrl } from \"../utils\";\n\nclass AlgorandProvider implements IProvider {\n  public name = \"algorand\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      const rpc =\n        rpcUrl || getRpcUrl(`${this.name}:${chainId}`, this.namespace, this.client.core.projectId);\n      if (!rpc) {\n        throw new Error(`No RPC url provided for chainId: ${chainId}`);\n      }\n      this.setHttpProvider(chainId, rpc);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // --------- PRIVATE --------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      http[chain] = this.createHttpProvider(chain, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (typeof rpc === \"undefined\") return undefined;\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default AlgorandProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getChainId, getGlobal } from \"../utils\";\n\nclass CardanoProvider implements IProvider {\n  public name = \"cip34\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n  }\n\n  // ------------- PRIVATE -------------- /\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const rpcURL = this.getCardanoRPCUrl(chain);\n      const parsedChain = getChainId(chain);\n      http[parsedChain] = this.createHttpProvider(parsedChain, rpcURL);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private getCardanoRPCUrl(chainId: string): string | undefined {\n    const rpcMap = this.namespace.rpcMap;\n    if (!rpcMap) return undefined;\n    return rpcMap[chainId];\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || this.getCardanoRPCUrl(chainId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default CardanoProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\n\n// Old wallet connect provider for Elrond\nclass ElrondProvider implements IProvider {\n  public name = \"elrond\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // --------- PRIVATE --------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChainId = getChainId(chain);\n      http[parsedChainId] = this.createHttpProvider(parsedChainId, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default ElrondProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getChainId, getGlobal, getRpcUrl } from \"../utils\";\n\nclass MultiversXProvider implements IProvider {\n  public name = \"multiversx\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // --------- PRIVATE --------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      const parsedChainId = getChainId(chain);\n      http[parsedChainId] = this.createHttpProvider(parsedChainId, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default MultiversXProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getGlobal, getRpcUrl } from \"../utils\";\n\nclass NearProvider implements IProvider {\n  public name = \"near\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    this.chainId = chainId;\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      const rpc = rpcUrl || getRpcUrl(`${this.name}:${chainId}`, this.namespace);\n      if (!rpc) {\n        throw new Error(`No RPC url provided for chainId: ${chainId}`);\n      }\n      this.setHttpProvider(chainId, rpc);\n    }\n\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n  }\n\n  // ---------------- PRIVATE ---------------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return (\n      accounts\n        // get the accounts from the active chain\n        .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n        // remove namespace & chainId from the string\n        .map((account) => account.split(\":\")[2]) || []\n    );\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace.chains.forEach((chain) => {\n      http[chain] = this.createHttpProvider(chain, this.namespace.rpcMap?.[chain]);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace);\n    if (typeof rpc === \"undefined\") return undefined;\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default NearProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\n\nimport { getRpcUrl, getGlobal } from \"../utils\";\n\nclass TezosProvider implements IProvider {\n  public name = \"tezos\";\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace = Object.assign(this.namespace, namespace);\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider().request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    this.chainId = chainId;\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      const rpc = rpcUrl || getRpcUrl(`${this.name}:${chainId}`, this.namespace);\n      if (!rpc) {\n        throw new Error(`No RPC url provided for chainId: ${chainId}`);\n      }\n      this.setHttpProvider(chainId, rpc);\n    }\n\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n  }\n\n  // ---------------- PRIVATE ---------------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return (\n      accounts\n        // get the accounts from the active chain\n        .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n        // remove namespace & chainId from the string\n        .map((account) => account.split(\":\")[2]) || []\n    );\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http: any = {};\n    this.namespace.chains.forEach((chain) => {\n      http[chain] = this.createHttpProvider(chain);\n    });\n    return http;\n  }\n\n  private getHttpProvider(): JsonRpcProvider {\n    const chain = `${this.name}:${this.chainId}`;\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(\n    chainId: string,\n    rpcUrl?: string | undefined,\n  ): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace);\n    if (typeof rpc === \"undefined\") return undefined;\n    const http = new JsonRpcProvider(new HttpConnection(rpc));\n    return http;\n  }\n}\n\nexport default TezosProvider;\n","import HttpConnection from \"@walletconnect/jsonrpc-http-connection\";\nimport { JsonRpcProvider } from \"@walletconnect/jsonrpc-provider\";\nimport Client from \"@walletconnect/sign-client\";\nimport { EngineTypes, SessionTypes } from \"@walletconnect/types\";\nimport EventEmitter from \"events\";\nimport { GENERIC_SUBPROVIDER_NAME, PROVIDER_EVENTS } from \"../constants\";\nimport {\n  IProvider,\n  RequestParams,\n  RpcProvidersMap,\n  SessionNamespace,\n  SubProviderOpts,\n} from \"../types\";\nimport { getGlobal, getRpcUrl } from \"../utils\";\nimport { parseChainId } from \"@walletconnect/utils\";\n\nclass GenericProvider implements IProvider {\n  public name = GENERIC_SUBPROVIDER_NAME;\n  public client: Client;\n  public httpProviders: RpcProvidersMap;\n  public events: EventEmitter;\n  public namespace: SessionNamespace;\n  public chainId: string;\n\n  constructor(opts: SubProviderOpts) {\n    this.namespace = opts.namespace;\n    this.events = getGlobal(\"events\");\n    this.client = getGlobal(\"client\");\n    this.chainId = this.getDefaultChain();\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public updateNamespace(namespace: SessionTypes.Namespace) {\n    this.namespace.chains = [\n      ...new Set((this.namespace.chains || []).concat(namespace.chains || [])),\n    ];\n    this.namespace.accounts = [\n      ...new Set((this.namespace.accounts || []).concat(namespace.accounts || [])),\n    ];\n    this.namespace.methods = [\n      ...new Set((this.namespace.methods || []).concat(namespace.methods || [])),\n    ];\n    this.namespace.events = [\n      ...new Set((this.namespace.events || []).concat(namespace.events || [])),\n    ];\n    this.httpProviders = this.createHttpProviders();\n  }\n\n  public requestAccounts(): string[] {\n    return this.getAccounts();\n  }\n\n  public request<T = unknown>(args: RequestParams): Promise<T> {\n    if (this.namespace.methods.includes(args.request.method)) {\n      return this.client.request(args as EngineTypes.RequestParams);\n    }\n    return this.getHttpProvider(args.chainId).request(args.request);\n  }\n\n  public setDefaultChain(chainId: string, rpcUrl?: string | undefined) {\n    // http provider exists so just set the chainId\n    if (!this.httpProviders[chainId]) {\n      this.setHttpProvider(chainId, rpcUrl);\n    }\n    this.chainId = chainId;\n    this.events.emit(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, `${this.name}:${chainId}`);\n  }\n\n  public getDefaultChain(): string {\n    if (this.chainId) return this.chainId;\n    if (this.namespace.defaultChain) return this.namespace.defaultChain;\n\n    const chainId = this.namespace.chains[0];\n    if (!chainId) throw new Error(`ChainId not found`);\n\n    return chainId.split(\":\")[1];\n  }\n\n  // --------- PRIVATE --------- //\n\n  private getAccounts(): string[] {\n    const accounts = this.namespace.accounts;\n    if (!accounts) {\n      return [];\n    }\n\n    return [\n      ...new Set(\n        accounts\n          // get the accounts from the active chain\n          .filter((account) => account.split(\":\")[1] === this.chainId.toString())\n          // remove namespace & chainId from the string\n          .map((account) => account.split(\":\")[2]),\n      ),\n    ];\n  }\n\n  private createHttpProviders(): RpcProvidersMap {\n    const http = {};\n    this.namespace?.accounts?.forEach((account) => {\n      const chain = parseChainId(account);\n      http[`${chain.namespace}:${chain.reference}`] = this.createHttpProvider(account);\n    });\n    return http;\n  }\n\n  private getHttpProvider(chain: string): JsonRpcProvider {\n    const http = this.httpProviders[chain];\n    if (typeof http === \"undefined\") {\n      throw new Error(`JSON-RPC provider for ${chain} not found`);\n    }\n    return http;\n  }\n\n  private setHttpProvider(chainId: string, rpcUrl?: string): void {\n    const http = this.createHttpProvider(chainId, rpcUrl);\n    if (http) {\n      this.httpProviders[chainId] = http;\n    }\n  }\n\n  private createHttpProvider(chainId: string, rpcUrl?: string): JsonRpcProvider | undefined {\n    const rpc = rpcUrl || getRpcUrl(chainId, this.namespace, this.client.core.projectId);\n    if (!rpc) {\n      throw new Error(`No RPC url provided for chainId: ${chainId}`);\n    }\n    const http = new JsonRpcProvider(new HttpConnection(rpc, getGlobal(\"disableProviderPing\")));\n    return http;\n  }\n}\n\nexport default GenericProvider;\n","import SignClient from \"@walletconnect/sign-client\";\nimport { SessionTypes } from \"@walletconnect/types\";\nimport { JsonRpcResult } from \"@walletconnect/jsonrpc-types\";\nimport { getSdkError, isValidArray, parseNamespaceKey } from \"@walletconnect/utils\";\nimport { getDefaultLoggerOptions, Logger, pino } from \"@walletconnect/logger\";\nimport {\n  convertChainIdToNumber,\n  getAccountsFromSession,\n  getChainsFromApprovedSession,\n  mergeRequiredOptionalNamespaces,\n  parseCaip10Account,\n  populateNamespacesChains,\n  setGlobal,\n} from \"./utils\";\nimport PolkadotProvider from \"./providers/polkadot\";\nimport Eip155Provider from \"./providers/eip155\";\nimport SolanaProvider from \"./providers/solana\";\nimport CosmosProvider from \"./providers/cosmos\";\nimport AlgorandProvider from \"./providers/algorand\";\nimport CardanoProvider from \"./providers/cardano\";\nimport ElrondProvider from \"./providers/elrond\";\nimport MultiversXProvider from \"./providers/multiversx\";\nimport NearProvider from \"./providers/near\";\nimport TezosProvider from \"./providers/tezos\";\nimport GenericProvider from \"./providers/generic\";\n\nimport {\n  IUniversalProvider,\n  IProvider,\n  RpcProviderMap,\n  ConnectParams,\n  RequestArguments,\n  UniversalProviderOpts,\n  NamespaceConfig,\n  PairingsCleanupOpts,\n  ProviderAccounts,\n  AuthenticateParams,\n} from \"./types\";\n\nimport { RELAY_URL, LOGGER, STORAGE, PROVIDER_EVENTS, GENERIC_SUBPROVIDER_NAME } from \"./constants\";\nimport EventEmitter from \"events\";\nimport { formatJsonRpcResult } from \"@walletconnect/jsonrpc-utils\";\n\nexport class UniversalProvider implements IUniversalProvider {\n  public client!: SignClient;\n  public namespaces?: NamespaceConfig;\n  public optionalNamespaces?: NamespaceConfig;\n  public sessionProperties?: SessionTypes.SessionProperties;\n  public scopedProperties?: SessionTypes.ScopedProperties;\n  public events: EventEmitter = new EventEmitter();\n  public rpcProviders: RpcProviderMap = {};\n  public session?: SessionTypes.Struct;\n  public providerOpts: UniversalProviderOpts;\n  public logger: Logger;\n  public uri: string | undefined;\n\n  private disableProviderPing = false;\n\n  static async init(opts: UniversalProviderOpts) {\n    const provider = new UniversalProvider(opts);\n    await provider.initialize();\n    return provider;\n  }\n\n  constructor(opts: UniversalProviderOpts) {\n    this.providerOpts = opts;\n    this.logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || LOGGER }));\n    this.disableProviderPing = opts?.disableProviderPing || false;\n  }\n\n  public async request<T = unknown>(\n    args: RequestArguments,\n    chain?: string | undefined,\n    expiry?: number | undefined,\n  ): Promise<T> {\n    const [namespace, chainId] = this.validateChain(chain);\n\n    if (!this.session) {\n      throw new Error(\"Please call connect() before request()\");\n    }\n\n    return await this.getProvider(namespace).request({\n      request: {\n        ...args,\n      },\n      chainId: `${namespace}:${chainId}`,\n      topic: this.session.topic,\n      expiry,\n    });\n  }\n\n  public sendAsync(\n    args: RequestArguments,\n    callback: (error: Error | null, response: JsonRpcResult) => void,\n    chain?: string | undefined,\n    expiry?: number | undefined,\n  ): void {\n    const id = new Date().getTime();\n    this.request(args, chain, expiry)\n      .then((response) => callback(null, formatJsonRpcResult(id, response)))\n      .catch((error) => callback(error, undefined as any));\n  }\n\n  public async enable(): Promise<ProviderAccounts> {\n    if (!this.client) {\n      throw new Error(\"Sign Client not initialized\");\n    }\n    if (!this.session) {\n      await this.connect({\n        namespaces: this.namespaces,\n        optionalNamespaces: this.optionalNamespaces,\n        sessionProperties: this.sessionProperties,\n        scopedProperties: this.scopedProperties,\n      });\n    }\n    const accounts = await this.requestAccounts();\n    return accounts as ProviderAccounts;\n  }\n\n  public async disconnect(): Promise<void> {\n    if (!this.session) {\n      throw new Error(\"Please call connect() before enable()\");\n    }\n    await this.client.disconnect({\n      topic: this.session?.topic,\n      reason: getSdkError(\"USER_DISCONNECTED\"),\n    });\n    await this.cleanup();\n  }\n\n  public async connect(opts: ConnectParams): Promise<SessionTypes.Struct | undefined> {\n    if (!this.client) {\n      throw new Error(\"Sign Client not initialized\");\n    }\n    this.setNamespaces(opts);\n    await this.cleanupPendingPairings();\n    if (opts.skipPairing) return;\n\n    return await this.pair(opts.pairingTopic);\n  }\n\n  public async authenticate(opts: AuthenticateParams, walletUniversalLink?: string) {\n    if (!this.client) {\n      throw new Error(\"Sign Client not initialized\");\n    }\n    this.setNamespaces(opts);\n    await this.cleanupPendingPairings();\n\n    const { uri, response } = await this.client.authenticate(opts, walletUniversalLink);\n    if (uri) {\n      this.uri = uri;\n      this.events.emit(\"display_uri\", uri);\n    }\n    const result = await response();\n    this.session = result.session;\n    if (this.session) {\n      // assign namespaces from session if not already defined\n      const approved = populateNamespacesChains(this.session.namespaces) as NamespaceConfig;\n      this.namespaces = mergeRequiredOptionalNamespaces(this.namespaces, approved);\n      await this.persist(\"namespaces\", this.namespaces);\n      this.onConnect();\n    }\n    return result;\n  }\n\n  public on(event: any, listener: any): void {\n    this.events.on(event, listener);\n  }\n\n  public once(event: string, listener: any): void {\n    this.events.once(event, listener);\n  }\n\n  public removeListener(event: string, listener: any): void {\n    this.events.removeListener(event, listener);\n  }\n\n  public off(event: string, listener: any): void {\n    this.events.off(event, listener);\n  }\n\n  get isWalletConnect() {\n    return true;\n  }\n\n  public async pair(pairingTopic: string | undefined): Promise<SessionTypes.Struct> {\n    const { uri, approval } = await this.client.connect({\n      pairingTopic,\n      requiredNamespaces: this.namespaces,\n      optionalNamespaces: this.optionalNamespaces,\n      sessionProperties: this.sessionProperties,\n      scopedProperties: this.scopedProperties,\n    });\n\n    if (uri) {\n      this.uri = uri;\n      this.events.emit(\"display_uri\", uri);\n    }\n\n    const session = await approval();\n    this.session = session;\n    // assign namespaces from session if not already defined\n    const approved = populateNamespacesChains(session.namespaces) as NamespaceConfig;\n    this.namespaces = mergeRequiredOptionalNamespaces(this.namespaces, approved);\n    await this.persist(\"namespaces\", this.namespaces);\n    await this.persist(\"optionalNamespaces\", this.optionalNamespaces);\n\n    this.onConnect();\n    return this.session;\n  }\n\n  public setDefaultChain(chain: string, rpcUrl?: string | undefined) {\n    try {\n      // ignore without active session\n      if (!this.session) return;\n      const [namespace, chainId] = this.validateChain(chain);\n      const provider = this.getProvider(namespace);\n      // @ts-expect-error\n      if (provider.name === GENERIC_SUBPROVIDER_NAME) {\n        provider.setDefaultChain(`${namespace}:${chainId}`, rpcUrl);\n      } else {\n        provider.setDefaultChain(chainId, rpcUrl);\n      }\n    } catch (error) {\n      // ignore the error if the fx is used prematurely before namespaces are set\n      if (!/Please call connect/.test((error as Error).message)) throw error;\n    }\n  }\n\n  public async cleanupPendingPairings(opts: PairingsCleanupOpts = {}): Promise<void> {\n    this.logger.info(\"Cleaning up inactive pairings...\");\n    const inactivePairings = this.client.pairing.getAll();\n\n    if (!isValidArray(inactivePairings)) return;\n\n    for (const pairing of inactivePairings) {\n      if (opts.deletePairings) {\n        this.client.core.expirer.set(pairing.topic, 0);\n      } else {\n        await this.client.core.relayer.subscriber.unsubscribe(pairing.topic);\n      }\n    }\n\n    this.logger.info(`Inactive pairings cleared: ${inactivePairings.length}`);\n  }\n\n  public abortPairingAttempt() {\n    this.logger.warn(\"abortPairingAttempt is deprecated. This is now a no-op.\");\n  }\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async checkStorage() {\n    this.namespaces = (await this.getFromStore(`namespaces`)) || {};\n    this.optionalNamespaces = (await this.getFromStore(`optionalNamespaces`)) || {};\n    if (this.session) this.createProviders();\n  }\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    await this.createClient();\n    await this.checkStorage();\n    this.registerEventListeners();\n  }\n\n  private async createClient() {\n    this.client =\n      this.providerOpts.client ||\n      (await SignClient.init({\n        core: this.providerOpts.core,\n        logger: this.providerOpts.logger || LOGGER,\n        relayUrl: this.providerOpts.relayUrl || RELAY_URL,\n        projectId: this.providerOpts.projectId,\n        metadata: this.providerOpts.metadata,\n        storageOptions: this.providerOpts.storageOptions,\n        storage: this.providerOpts.storage,\n        name: this.providerOpts.name,\n        customStoragePrefix: this.providerOpts.customStoragePrefix,\n        telemetryEnabled: this.providerOpts.telemetryEnabled,\n      }));\n\n    if (this.providerOpts.session) {\n      try {\n        this.session = this.client.session.get(this.providerOpts.session.topic);\n      } catch (error) {\n        this.logger.error(\"Failed to get session\", error);\n        throw new Error(\n          `The provided session: ${this.providerOpts?.session?.topic} doesn't exist in the Sign client`,\n        );\n      }\n    } else {\n      const sessions = this.client.session.getAll();\n      this.session = sessions[0];\n    }\n    this.logger.trace(`SignClient Initialized`);\n  }\n\n  private createProviders(): void {\n    if (!this.client) {\n      throw new Error(\"Sign Client not initialized\");\n    }\n\n    if (!this.session) {\n      throw new Error(\"Session not initialized. Please call connect() before enable()\");\n    }\n\n    const providersToCreate = [\n      ...new Set(\n        Object.keys(this.session.namespaces).map((namespace) => parseNamespaceKey(namespace)),\n      ),\n    ];\n\n    setGlobal(\"client\", this.client);\n    setGlobal(\"events\", this.events);\n    setGlobal(\"disableProviderPing\", this.disableProviderPing);\n\n    providersToCreate.forEach((namespace) => {\n      if (!this.session) return;\n      const accounts = getAccountsFromSession(namespace, this.session);\n      const approvedChains = getChainsFromApprovedSession(accounts);\n      const mergedNamespaces = mergeRequiredOptionalNamespaces(\n        this.namespaces,\n        this.optionalNamespaces,\n      );\n      const combinedNamespace = {\n        ...mergedNamespaces[namespace],\n        accounts,\n        chains: approvedChains,\n      };\n      switch (namespace) {\n        case \"eip155\":\n          this.rpcProviders[namespace] = new Eip155Provider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"algorand\":\n          this.rpcProviders[namespace] = new AlgorandProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"solana\":\n          this.rpcProviders[namespace] = new SolanaProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"cosmos\":\n          this.rpcProviders[namespace] = new CosmosProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"polkadot\":\n          this.rpcProviders[namespace] = new PolkadotProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"cip34\":\n          this.rpcProviders[namespace] = new CardanoProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"elrond\":\n          this.rpcProviders[namespace] = new ElrondProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"multiversx\":\n          this.rpcProviders[namespace] = new MultiversXProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"near\":\n          this.rpcProviders[namespace] = new NearProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        case \"tezos\":\n          this.rpcProviders[namespace] = new TezosProvider({\n            namespace: combinedNamespace,\n          });\n          break;\n        default:\n          if (!this.rpcProviders[GENERIC_SUBPROVIDER_NAME]) {\n            this.rpcProviders[GENERIC_SUBPROVIDER_NAME] = new GenericProvider({\n              namespace: combinedNamespace,\n            });\n          } else {\n            this.rpcProviders[GENERIC_SUBPROVIDER_NAME].updateNamespace(combinedNamespace);\n          }\n      }\n    });\n  }\n\n  private registerEventListeners(): void {\n    if (typeof this.client === \"undefined\") {\n      throw new Error(\"Sign Client is not initialized\");\n    }\n\n    this.client.on(\"session_ping\", (args) => {\n      const { topic } = args;\n      if (topic !== this.session?.topic) return;\n      this.events.emit(\"session_ping\", args);\n    });\n\n    this.client.on(\"session_event\", (args) => {\n      const { params, topic } = args;\n      if (topic !== this.session?.topic) return;\n      const { event } = params;\n      if (event.name === \"accountsChanged\") {\n        const accounts = event.data;\n        if (accounts && isValidArray(accounts))\n          this.events.emit(\"accountsChanged\", accounts.map(parseCaip10Account));\n      } else if (event.name === \"chainChanged\") {\n        const requestChainId = params.chainId;\n        const payloadChainId = params.event.data as number;\n        const namespace = parseNamespaceKey(requestChainId);\n        // chainIds might differ between the request & payload - request is always in CAIP2 format, while payload might be string, number, CAIP2 or hex\n        // take priority of the payload chainId\n        const chainIdToProcess =\n          convertChainIdToNumber(requestChainId) !== convertChainIdToNumber(payloadChainId)\n            ? `${namespace}:${convertChainIdToNumber(payloadChainId)}`\n            : requestChainId;\n\n        this.onChainChanged(chainIdToProcess);\n      } else {\n        this.events.emit(event.name, event.data);\n      }\n\n      this.events.emit(\"session_event\", args);\n    });\n\n    this.client.on(\"session_update\", ({ topic, params }) => {\n      if (topic !== this.session?.topic) return;\n      const { namespaces } = params;\n      const _session = this.client?.session.get(topic);\n      this.session = { ..._session, namespaces } as SessionTypes.Struct;\n      this.onSessionUpdate();\n      this.events.emit(\"session_update\", { topic, params });\n    });\n\n    this.client.on(\"session_delete\", async (payload) => {\n      if (payload.topic !== this.session?.topic) return;\n      await this.cleanup();\n      this.events.emit(\"session_delete\", payload);\n      this.events.emit(\"disconnect\", {\n        ...getSdkError(\"USER_DISCONNECTED\"),\n        data: payload.topic,\n      });\n    });\n\n    this.on(PROVIDER_EVENTS.DEFAULT_CHAIN_CHANGED, (caip2ChainId: string) => {\n      this.onChainChanged(caip2ChainId, true);\n    });\n  }\n\n  private getProvider(namespace: string): IProvider {\n    return this.rpcProviders[namespace] || this.rpcProviders[GENERIC_SUBPROVIDER_NAME];\n  }\n\n  private onSessionUpdate(): void {\n    Object.keys(this.rpcProviders).forEach((namespace: string) => {\n      this.getProvider(namespace).updateNamespace(\n        this.session?.namespaces[namespace] as SessionTypes.BaseNamespace,\n      );\n    });\n  }\n\n  private setNamespaces(params: ConnectParams): void {\n    const {\n      namespaces = {},\n      optionalNamespaces = {},\n      sessionProperties,\n      scopedProperties,\n    } = params;\n\n    // requiredNamespaces are deprecated, assign them to optionalNamespaces\n    this.optionalNamespaces = mergeRequiredOptionalNamespaces(namespaces, optionalNamespaces);\n    this.sessionProperties = sessionProperties;\n    this.scopedProperties = scopedProperties;\n  }\n\n  private validateChain(chain?: string): [string, string] {\n    const [namespace, chainId] = chain?.split(\":\") || [\"\", \"\"];\n    if (!this.namespaces || !Object.keys(this.namespaces).length) return [namespace, chainId];\n    // validate namespace\n    if (namespace) {\n      if (\n        // some namespaces might be defined with inline chainId e.g. eip155:1\n        // and we need to parse them\n        !Object.keys(this.namespaces || {})\n          .map((key) => parseNamespaceKey(key))\n          .includes(namespace)\n      ) {\n        throw new Error(\n          `Namespace '${namespace}' is not configured. Please call connect() first with namespace config.`,\n        );\n      }\n    }\n    if (namespace && chainId) {\n      return [namespace, chainId];\n    }\n    const defaultNamespace = parseNamespaceKey(Object.keys(this.namespaces)[0]);\n    const defaultChain = this.rpcProviders[defaultNamespace].getDefaultChain();\n    return [defaultNamespace, defaultChain];\n  }\n\n  private async requestAccounts(): Promise<string[]> {\n    const [namespace] = this.validateChain();\n    return await this.getProvider(namespace).requestAccounts();\n  }\n\n  private async onChainChanged(caip2Chain: string, internal = false): Promise<void> {\n    if (!this.namespaces) return;\n\n    const [namespace, chainId] = this.validateChain(caip2Chain);\n\n    if (!chainId) return;\n\n    this.updateNamespaceChain(namespace, chainId);\n\n    this.events.emit(\"chainChanged\", chainId);\n\n    const previousChainId = this.getProvider(namespace).getDefaultChain();\n    if (!internal) {\n      this.getProvider(namespace).setDefaultChain(chainId);\n    }\n\n    this.emitAccountsChangedOnChainChange({ namespace, previousChainId, newChainId: caip2Chain });\n    await this.persist(\"namespaces\", this.namespaces);\n  }\n\n  /**\n   * Emits `accountsChanged` event when a chain is changed and there are new accounts on the new chain\n   */\n  private emitAccountsChangedOnChainChange({\n    namespace,\n    previousChainId,\n    newChainId,\n  }: {\n    namespace: string;\n    previousChainId: string;\n    newChainId: string;\n  }): void {\n    try {\n      if (previousChainId === newChainId) {\n        return;\n      }\n\n      const accounts = this.session?.namespaces[namespace]?.accounts;\n      if (!accounts) return;\n      const newChainIdAccounts = accounts\n        .filter((account) => account.includes(`${newChainId}:`))\n        .map(parseCaip10Account);\n      if (!isValidArray(newChainIdAccounts)) return;\n      this.events.emit(\"accountsChanged\", newChainIdAccounts);\n    } catch (error) {\n      this.logger.warn(\"Failed to emit accountsChanged on chain change\", error);\n    }\n  }\n\n  private updateNamespaceChain(namespace: string, chainId: string): void {\n    if (!this.namespaces) return;\n\n    const namespaceKey = this.namespaces[namespace] ? namespace : `${namespace}:${chainId}`;\n\n    const defaultNamespace = {\n      chains: [],\n      methods: [],\n      events: [],\n      defaultChain: chainId,\n    };\n\n    if (!this.namespaces[namespaceKey]) {\n      this.namespaces[namespaceKey] = defaultNamespace;\n    } else if (this.namespaces[namespaceKey]) {\n      this.namespaces[namespaceKey].defaultChain = chainId;\n    }\n  }\n\n  private onConnect() {\n    this.createProviders();\n    this.events.emit(\"connect\", { session: this.session });\n  }\n\n  private async cleanup() {\n    this.namespaces = undefined;\n    this.optionalNamespaces = undefined;\n    this.sessionProperties = undefined;\n    await this.deleteFromStore(\"namespaces\");\n    await this.deleteFromStore(\"optionalNamespaces\");\n    await this.deleteFromStore(\"sessionProperties\");\n    // reset the session after removing from store as the topic is used there\n    this.session = undefined;\n    await this.cleanupPendingPairings({ deletePairings: true });\n    await this.cleanupStorage();\n  }\n\n  private async persist(key: string, data: unknown) {\n    const topic = this.session?.topic || \"\";\n    await this.client.core.storage.setItem(`${STORAGE}/${key}${topic}`, data);\n  }\n\n  private async getFromStore(key: string) {\n    const topic = this.session?.topic || \"\";\n    return await this.client.core.storage.getItem(`${STORAGE}/${key}${topic}`);\n  }\n\n  private async deleteFromStore(key: string) {\n    const topic = this.session?.topic || \"\";\n    await this.client.core.storage.removeItem(`${STORAGE}/${key}${topic}`);\n  }\n\n  // remove all storage items if there are no sessions left\n  private async cleanupStorage() {\n    try {\n      if (this.client?.session.length > 0) {\n        return;\n      }\n      const keys = await this.client.core.storage.getKeys();\n      for (const key of keys) {\n        if (key.startsWith(STORAGE)) {\n          await this.client.core.storage.removeItem(key);\n        }\n      }\n    } catch (error) {\n      this.logger.warn(\"Failed to cleanup storage\", error);\n    }\n  }\n}\nexport default UniversalProvider;\n","import { UniversalProvider as Provider } from \"./UniversalProvider\";\nexport * from \"./types\";\nexport const UniversalProvider = Provider;\nexport default Provider;\n"],"names":["isTypedArray","cloneDeepWith","chainId","rpc","projectId","_a","chain","parseChainId","RPC_URL","accounts","address","namespace","session","matchedNamespaceKeys","key","accountsForNamespace","required","optional","requiredNamespaces","optionalNamespaces","merge","namespaces","_b","_c","_d","_e","normalizedNamespaces","isValidObject","values","chains","isCaipNamespace","methods","events","rpcMap","normalizedKey","parseNamespaceKey","__spreadProps","__spreadValues","mergeArrays","caip10Account","parsedNamespaces","globals","value","p","a","r","PolkadotProvider","opts","__publicField","getGlobal","args","rpcUrl","PROVIDER_EVENTS","account","http","parsedChainId","getChainId","getRpcUrl","JsonRpcProvider","HttpConnection","Eip155Provider","parsedChain","hexChainId","chainIds","capabilitiesKey","sessionCapabilities","capabilities","error","bundlerName","bundlerUrl","customUrl","url","response","formatJsonRpcRequest","cap2ChainId","BUNDLER_URL","SolanaProvider","CosmosProvider","AlgorandProvider","CardanoProvider","rpcURL","ElrondProvider","MultiversXProvider","NearProvider","TezosProvider","GenericProvider","GENERIC_SUBPROVIDER_NAME","UniversalProvider","EventEmitter","pino","getDefaultLoggerOptions","LOGGER","provider","expiry","callback","id","formatJsonRpcResult","getSdkError","walletUniversalLink","uri","result","approved","populateNamespacesChains","mergeRequiredOptionalNamespaces","event","listener","pairingTopic","approval","inactivePairings","isValidArray","pairing","SignClient","RELAY_URL","sessions","providersToCreate","setGlobal","getAccountsFromSession","approvedChains","getChainsFromApprovedSession","mergedNamespaces","combinedNamespace","topic","params","parseCaip10Account","requestChainId","payloadChainId","chainIdToProcess","convertChainIdToNumber","_session","payload","caip2ChainId","sessionProperties","scopedProperties","defaultNamespace","defaultChain","caip2Chain","internal","previousChainId","newChainId","newChainIdAccounts","namespaceKey","data","STORAGE","keys","Provider"],"mappings":"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"}