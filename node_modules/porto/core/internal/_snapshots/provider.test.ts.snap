// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`contract > wallet_connect > behavior: \`createAccount\` + \`grantPermissions\` capability (provided key) 1`] = `
[
  {
    "chainId": undefined,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": undefined,
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": 31337,
    "expiry": 9999999999,
    "feeToken": {
      "currency": "USD",
      "value": "1",
    },
    "hash": "0x594638e5e062340ffb82ba40803ebb7b0958358e0e94b585f5b2d9c8250a4a12",
    "id": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [],
    },
    "prehash": false,
    "publicKey": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`contract > wallet_connect > behavior: \`createAccount\` + \`grantPermissions\` capability 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": undefined,
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "currency": "USD",
      "value": "1",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [],
    },
    "prehash": true,
    "privateKey": CryptoKey {},
    "publicKey": null,
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`contract > wallet_connect > behavior: \`createAccount\` capability > 
        [
          {
            "expiry": null,
            "hash": null,
            "permissions": undefined,
            "privateKey": [Function],
            "publicKey": null,
            "role": "admin",
            "type": "p256",
          },
        ]
       1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": undefined,
    "prehash": false,
    "privateKey": {
      "privateKey": undefined,
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
]
`;

exports[`contract > wallet_connect > behavior: \`grantPermissions\` capability (no permissions) 1`] = `
[RpcResponse.InvalidParamsError: Expected an array of at least 1 item(s), actual []
Path: params.0.capabilities.grantPermissions.permissions.calls

Details: Request.Request
└─ Rpc.wallet_connect.Request
   └─ ["params"]
      └─ readonly [{ readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }] | undefined
         ├─ readonly [{ readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }]
         │  └─ [0]
         │     └─ { readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }
         │        └─ ["capabilities"]
         │           └─ Rpc.wallet_connect.Capabilities | undefined
         │              ├─ Rpc.wallet_connect.Capabilities
         │              │  └─ ["grantPermissions"]
         │              │     └─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } } | undefined
         │              │        ├─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }
         │              │        │  └─ ["permissions"]
         │              │        │     └─ { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined }
         │              │        │        └─ ["calls"]
         │              │        │           └─ minItems(1)
         │              │        │              └─ Predicate refinement failure
         │              │        │                 └─ Expected an array of at least 1 item(s), actual []
         │              │        └─ Expected undefined, actual {"expiry":9999999,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[]}}
         │              └─ Expected undefined, actual {"createAccount":true,"grantPermissions":{"expiry":9999999,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[]}}}
         └─ Expected undefined, actual [{"capabilities":{"createAccount":true,"grantPermissions":{"expiry":9999999,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[]}}}}]]
`;

exports[`contract > wallet_connect > behavior: \`grantPermissions\` capability (unlimited expiry) 1`] = `
[RpcResponse.InvalidParamsError: Expected a number greater than or equal to 1, actual 0
Path: params.0.capabilities.grantPermissions.expiry

Details: Request.Request
└─ Rpc.wallet_connect.Request
   └─ ["params"]
      └─ readonly [{ readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }] | undefined
         ├─ readonly [{ readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }]
         │  └─ [0]
         │     └─ { readonly capabilities?: Rpc.wallet_connect.Capabilities | undefined }
         │        └─ ["capabilities"]
         │           └─ Rpc.wallet_connect.Capabilities | undefined
         │              ├─ Rpc.wallet_connect.Capabilities
         │              │  └─ ["grantPermissions"]
         │              │     └─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } } | undefined
         │              │        ├─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }
         │              │        │  └─ ["expiry"]
         │              │        │     └─ greaterThanOrEqualTo(1)
         │              │        │        └─ Predicate refinement failure
         │              │        │           └─ Expected a number greater than or equal to 1, actual 0
         │              │        └─ Expected undefined, actual {"expiry":0,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[{"signature":"mint()"}]}}
         │              └─ Expected undefined, actual {"createAccount":true,"grantPermissions":{"expiry":0,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[{"signature":"mint()"}]}}}
         └─ Expected undefined, actual [{"capabilities":{"createAccount":true,"grantPermissions":{"expiry":0,"feeToken":{"currency":"USD","value":"1"},"permissions":{"calls":[{"signature":"mint()"}]}}}}]]
`;

exports[`contract > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 1`] = `
[
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
    "key": {
      "publicKey": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
      "type": "address",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [],
    },
  },
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
    "key": {
      "publicKey": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
      "type": "p256",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0x14d1120d7b160000",
          "period": "day",
          "token": null,
        },
      ],
    },
  },
]
`;

exports[`contract > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 2`] = `
[
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
    "key": {
      "publicKey": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
      "type": "address",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [],
    },
  },
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
    "key": {
      "publicKey": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
      "type": "p256",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0x14d1120d7b160000",
          "period": "day",
          "token": null,
        },
      ],
    },
  },
]
`;

exports[`contract > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 3`] = `[]`;

exports[`contract > wallet_grantPermissions > behavior: no permissions 1`] = `
[RpcResponse.InvalidParamsError: Expected an array of at least 1 item(s), actual []
Path: params.0.permissions.calls

Details: Request.Request
└─ Rpc.wallet_grantPermissions.Request
   └─ ["params"]
      └─ readonly [{ readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }]
         └─ [0]
            └─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }
               └─ ["permissions"]
                  └─ { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined }
                     └─ ["calls"]
                        └─ minItems(1)
                           └─ Predicate refinement failure
                              └─ Expected an array of at least 1 item(s), actual []]
`;

exports[`contract > wallet_grantPermissions > behavior: unlimited expiry 1`] = `
[RpcResponse.InvalidParamsError: Expected a number greater than or equal to 1, actual 0
Path: params.0.expiry

Details: Request.Request
└─ Rpc.wallet_grantPermissions.Request
   └─ ["params"]
      └─ readonly [{ readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }]
         └─ [0]
            └─ { readonly address?: \`0x\${string}\` | undefined; readonly chainId?: (\`0x\${string}\` <-> number) | undefined; readonly expiry: greaterThanOrEqualTo(1); readonly feeToken?: { readonly currency: "ETH" | "USDC" | "USDT" | "USD"; readonly value: a string matching the pattern ^\\d+(\\.\\d+)?$ } | undefined; readonly key?: { readonly publicKey: \`0x\${string}\`; readonly type: "address" | "p256" | "secp256k1" | "webauthn-p256" } | undefined; readonly permissions: { readonly calls: minItems(1); readonly signatureVerification?: { readonly addresses: ReadonlyArray<\`0x\${string}\`> } | undefined; readonly spend?: ReadonlyArray<{ readonly limit: (\`0x\${string}\` <-> bigint); readonly period: "minute" | "hour" | "day" | "week" | "month" | "year"; readonly token?: \`0x\${string}\` | undefined }> | undefined } }
               └─ ["expiry"]
                  └─ greaterThanOrEqualTo(1)
                     └─ Predicate refinement failure
                        └─ Expected a number greater than or equal to 1, actual 0]
`;

exports[`contract > wallet_revokePermissions > behavior: revoke last admin key 1`] = `[RpcResponse.InternalError: cannot revoke permissions.]`;

exports[`contract > wallet_sendCalls > behavior: not provider-managed permission 1`] = `[RpcResponse.InternalError: permission (id: 0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e) does not exist.]`;

exports[`contract > wallet_sendCalls > behavior: permission does not exist 1`] = `[RpcResponse.InternalError: permission (id: 0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e) does not exist.]`;

exports[`relay > behavior: invalid params > Validation error: Invalid input at "params[0].to" 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].to\`: Expected template_literal. Needs string in format ^0x[A-Fa-f0-9]{40}$.]
`;

exports[`relay > behavior: invalid params 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].to\`: Expected template_literal. Needs string in format ^0x[A-Fa-f0-9]{40}$.]
`;

exports[`relay > eth_accounts > behavior: disconnected 1`] = `[Provider.DisconnectedError: The provider is disconnected from all chains.]`;

exports[`relay > wallet_connect > behavior: \`createAccount\` + \`grantPermissions\` capability (provided key) 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": 9999999999,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": "0x594638e5e062340ffb82ba40803ebb7b0958358e0e94b585f5b2d9c8250a4a12",
    "id": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": 1000000000000000000n,
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": false,
    "publicKey": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`relay > wallet_connect > behavior: \`createAccount\` + \`grantPermissions\` capability 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": 1000000000000000000n,
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": true,
    "privateKey": CryptoKey {},
    "publicKey": null,
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`relay > wallet_connect > behavior: \`createAccount\` capability > 
        [
          {
            "expiry": null,
            "hash": null,
            "permissions": undefined,
            "privateKey": [Function],
            "publicKey": null,
            "role": "admin",
            "type": "p256",
          },
        ]
       1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": undefined,
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
]
`;

exports[`relay > wallet_connect > behavior: \`grantPermissions\` capability (no permissions) 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].capabilities.grantPermissions.permissions.calls\`: array must be at least 1]
`;

exports[`relay > wallet_connect > behavior: \`grantPermissions\` capability (unlimited expiry) 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].capabilities.grantPermissions.expiry\`: number must be at least 1]
`;

exports[`relay > wallet_connect > default 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {},
    "prehash": false,
    "privateKey": null,
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
]
`;

exports[`relay > wallet_disconnect > default 1`] = `
[
  [Provider.DisconnectedError: The provider is disconnected from all chains.],
]
`;

exports[`relay > wallet_getAdmins > behavior: disconnected 1`] = `[Provider.DisconnectedError: The provider is disconnected from all chains.]`;

exports[`relay > wallet_getCapabilities > behavior: chainId 1`] = `
[
  "0x7a69",
]
`;

exports[`relay > wallet_getCapabilities > behavior: chainId 2`] = `
{
  "status": "supported",
}
`;

exports[`relay > wallet_getCapabilities > behavior: chainId 3`] = `true`;

exports[`relay > wallet_getCapabilities > behavior: chainId 4`] = `
[
  {
    "address": "0x0000000000000000000000000000000000000000",
    "decimals": 18,
    "feeToken": true,
    "interop": false,
    "nativeRate": null,
    "symbol": "ETH",
    "uid": "ethereum",
  },
  {
    "address": "0x8ce361602b935680e8dec218b820ff5056beb7af",
    "decimals": 18,
    "feeToken": true,
    "interop": false,
    "nativeRate": null,
    "symbol": "EXP",
    "uid": "exp",
  },
  {
    "address": "0xe1aa25618fa0c7a1cfdab5d6b456af611873b629",
    "decimals": 18,
    "feeToken": true,
    "interop": false,
    "nativeRate": null,
    "symbol": "EXP2",
    "uid": "exp2",
  },
]
`;

exports[`relay > wallet_getCapabilities > behavior: chainId 5`] = `
{
  "supported": true,
}
`;

exports[`relay > wallet_getCapabilities > behavior: chainId 6`] = `
{
  "supported": true,
}
`;

exports[`relay > wallet_getCapabilities > default 1`] = `
[
  "0x7a69",
]
`;

exports[`relay > wallet_getCapabilities > default 2`] = `
{
  "status": "supported",
}
`;

exports[`relay > wallet_getCapabilities > default 3`] = `true`;

exports[`relay > wallet_getCapabilities > default 4`] = `3`;

exports[`relay > wallet_getCapabilities > default 5`] = `
{
  "supported": true,
}
`;

exports[`relay > wallet_getCapabilities > default 6`] = `
{
  "supported": true,
}
`;

exports[`relay > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 1`] = `
[
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
    "key": {
      "publicKey": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
      "type": "address",
    },
    "permissions": {
      "calls": [
        {
          "signature": "0x1249c58b",
          "to": null,
        },
        {
          "signature": "0x32323232",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0x1bc16d674ec80000",
          "period": "year",
          "token": null,
        },
      ],
    },
  },
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
    "key": {
      "publicKey": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
      "type": "p256",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0xde0b6b3a7640000",
          "period": "day",
          "token": null,
        },
        {
          "limit": "0x14d1120d7b160000",
          "period": "day",
          "token": null,
        },
      ],
    },
  },
]
`;

exports[`relay > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 2`] = `
[
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
    "key": {
      "publicKey": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
      "type": "address",
    },
    "permissions": {
      "calls": [
        {
          "signature": "0x1249c58b",
          "to": null,
        },
        {
          "signature": "0x32323232",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0x1bc16d674ec80000",
          "period": "year",
          "token": null,
        },
      ],
    },
  },
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
    "key": {
      "publicKey": "0xcafebabecafebabecafebabecafebabecafebabecafebabecafebabecafebabe",
      "type": "p256",
    },
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0xde0b6b3a7640000",
          "period": "day",
          "token": null,
        },
        {
          "limit": "0x14d1120d7b160000",
          "period": "day",
          "token": null,
        },
      ],
    },
  },
]
`;

exports[`relay > wallet_getPermissions > behavior: grant on connect > grant another > get after connect 3`] = `
[
  {
    "address": null,
    "chainId": null,
    "expiry": 9999999999,
    "id": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
    "key": {
      "publicKey": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
      "type": "address",
    },
    "permissions": {
      "calls": [
        {
          "signature": "0x1249c58b",
          "to": null,
        },
        {
          "signature": "0x32323232",
          "to": null,
        },
      ],
      "spend": [
        {
          "limit": "0x1bc16d674ec80000",
          "period": "year",
          "token": null,
        },
      ],
    },
  },
]
`;

exports[`relay > wallet_grantAdmin > default 1`] = `
{
  "id": "0x0000000000000000000000000000000000069420",
  "publicKey": "0x0000000000000000000000000000000000069420",
  "type": "address",
}
`;

exports[`relay > wallet_grantPermissions > behavior: no permissions 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].permissions.calls\`: array must be at least 1]
`;

exports[`relay > wallet_grantPermissions > behavior: provided key 1`] = `
{
  "address": null,
  "capabilities": null,
  "chainId": null,
  "expiry": 9999999999,
  "id": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
  "key": {
    "publicKey": "0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e",
    "type": "p256",
  },
  "permissions": {
    "calls": [
      {
        "signature": "mint()",
      },
    ],
    "spend": [
      {
        "limit": "0xde0b6b3a7640000",
        "period": "year",
        "token": null,
      },
    ],
  },
}
`;

exports[`relay > wallet_grantPermissions > behavior: provided key 2`] = `
{
  "address": null,
  "capabilities": null,
  "chainId": null,
  "expiry": 9999999999,
  "id": "0x0000000000000000000000000000000000000000",
  "key": {
    "publicKey": "0x0000000000000000000000000000000000000000",
    "type": "address",
  },
  "permissions": {
    "calls": [
      {
        "signature": "mint()",
      },
    ],
    "spend": [
      {
        "limit": "0xde0b6b3a7640000",
        "period": "day",
        "token": null,
      },
      {
        "limit": "0x14d1120d7b160000",
        "period": "day",
        "token": null,
      },
    ],
  },
}
`;

exports[`relay > wallet_grantPermissions > behavior: provided key 3`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": "0xde0b6b3a7640000",
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": "0xde0b6b3a7640000",
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": false,
    "publicKey": null,
    "role": "session",
    "type": "p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": "0xde0b6b3a7640000",
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": false,
    "publicKey": null,
    "role": "session",
    "type": "address",
  },
]
`;

exports[`relay > wallet_grantPermissions > behavior: unlimited expiry 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].expiry\`: number must be at least 1]
`;

exports[`relay > wallet_grantPermissions > default 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": 1000000000000000000n,
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": true,
    "privateKey": CryptoKey {},
    "publicKey": null,
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`relay > wallet_revokeAdmin > default 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": undefined,
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "hash": null,
    "id": null,
    "prehash": false,
    "publicKey": null,
    "role": "admin",
    "type": "address",
  },
]
`;

exports[`relay > wallet_revokeAdmin > default 2`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": undefined,
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
]
`;

exports[`relay > wallet_revokePermissions > behavior: revoke last admin key 1`] = `[RpcResponse.InternalError: cannot revoke admins.]`;

exports[`relay > wallet_revokePermissions > default 1`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": {
      "spend": undefined,
    },
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
  {
    "chainId": null,
    "expiry": null,
    "feeToken": {
      "limit": "1",
      "symbol": "EXP",
    },
    "hash": null,
    "id": null,
    "permissions": {
      "calls": [
        {
          "signature": "mint()",
        },
      ],
      "spend": [
        {
          "limit": 1000000000000000000n,
          "period": "year",
          "token": null,
        },
      ],
    },
    "prehash": true,
    "privateKey": CryptoKey {},
    "publicKey": null,
    "role": "session",
    "type": "p256",
  },
]
`;

exports[`relay > wallet_revokePermissions > default 2`] = `
[
  {
    "chainId": null,
    "expiry": null,
    "feeToken": undefined,
    "hash": null,
    "id": null,
    "permissions": undefined,
    "prehash": false,
    "privateKey": {
      "privateKey": [Function],
    },
    "publicKey": null,
    "role": "admin",
    "type": "webauthn-p256",
  },
]
`;

exports[`relay > wallet_sendCalls > behavior: no calls.to 1`] = `
[RpcResponse.InvalidParamsError: Validation failed with 1 error:

- at \`params[0].calls[0].to\`: Expected template_literal. Needs string in format ^0x[A-Fa-f0-9]{40}$.]
`;

exports[`relay > wallet_sendCalls > behavior: not provider-managed permission 1`] = `[RpcResponse.InternalError: permission (id: 0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e) does not exist.]`;

exports[`relay > wallet_sendCalls > behavior: permission does not exist 1`] = `[RpcResponse.InternalError: permission (id: 0x86a0d77beccf47a0a78cccfc19fdfe7317816740c9f9e6d7f696a02b0c66e0e21744d93c5699e9ce658a64ce60df2f32a17954cd577c713922bf62a1153cf68e) does not exist.]`;
