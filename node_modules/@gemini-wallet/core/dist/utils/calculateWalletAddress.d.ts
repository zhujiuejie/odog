import { type Address, type Hex } from "viem";
export interface WebAuthnValidatorData {
    pubKeyX: bigint;
    pubKeyY: bigint;
}
export interface CalculateWalletAddressParams {
    publicKey: Hex;
    credentialId: string;
    index?: bigint;
}
/**
 * Calculate smart wallet address from public key and credential ID
 * This handles all validation and setup internally
 */
export declare function calculateWalletAddress(params: CalculateWalletAddressParams): Address;
/**
 * Generate authenticator ID hash from credential ID
 */
export declare function generateAuthenticatorIdHash(credentialId: string): Hex;
/**
 * Validate WebAuthn public key offchain
 * Mirrors the contract's _validateWebAuthnKey function
 */
export declare function validateWebAuthnKey(webAuthnData: WebAuthnValidatorData): boolean;
//# sourceMappingURL=calculateWalletAddress.d.ts.map